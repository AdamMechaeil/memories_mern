[{"C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\index.js":"1","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\App.js":"2","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\styles.js":"3","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\context\\GlobalContext.js":"4","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\context\\AppReducer.js":"5","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Posts\\Form\\Form.js":"6","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Posts\\Form\\styles.js":"7","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Posts\\Posts.js":"8","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Posts\\styles.js":"9","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Posts\\Post\\Post.js":"10","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Posts\\Post\\styles.js":"11","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Navbar\\NavBar.js":"12","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Home\\Home.js":"13","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Navbar\\Styles.js":"14","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Auth\\Auth.js":"15","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Auth\\Input.js":"16","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Auth\\Styles.js":"17","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Auth\\icon.js":"18","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\context\\Auth.js":"19","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\PostDetails\\PostDetails.jsx":"20","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\PostDetails\\styles.js":"21","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Pagination.jsx":"22","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\styles.js":"23","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Home\\Styles.js":"24","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\PostDetails\\Comment.jsx":"25"},{"size":533,"mtime":1632257305566,"results":"26","hashOfConfig":"27"},{"size":1080,"mtime":1638216958407,"results":"28","hashOfConfig":"27"},{"size":367,"mtime":1631215188438,"results":"29","hashOfConfig":"27"},{"size":6532,"mtime":1639082941346,"results":"30","hashOfConfig":"27"},{"size":1307,"mtime":1639082952810,"results":"31","hashOfConfig":"27"},{"size":2976,"mtime":1638903208702,"results":"32","hashOfConfig":"27"},{"size":447,"mtime":1638903126853,"results":"33","hashOfConfig":"27"},{"size":945,"mtime":1638902036828,"results":"34","hashOfConfig":"27"},{"size":1407,"mtime":1638649712970,"results":"35","hashOfConfig":"27"},{"size":3522,"mtime":1638905208070,"results":"36","hashOfConfig":"27"},{"size":1086,"mtime":1638649487946,"results":"37","hashOfConfig":"27"},{"size":1867,"mtime":1638904105651,"results":"38","hashOfConfig":"27"},{"size":2960,"mtime":1638903802294,"results":"39","hashOfConfig":"27"},{"size":952,"mtime":1638125686932,"results":"40","hashOfConfig":"27"},{"size":4519,"mtime":1638125686885,"results":"41","hashOfConfig":"27"},{"size":936,"mtime":1638125686885,"results":"42","hashOfConfig":"27"},{"size":666,"mtime":1638125686901,"results":"43","hashOfConfig":"27"},{"size":512,"mtime":1638125686909,"results":"44","hashOfConfig":"27"},{"size":499,"mtime":1638125689942,"results":"45","hashOfConfig":"27"},{"size":3764,"mtime":1639083219859,"results":"46","hashOfConfig":"27"},{"size":1091,"mtime":1639075328960,"results":"47","hashOfConfig":"27"},{"size":882,"mtime":1638904488779,"results":"48","hashOfConfig":"27"},{"size":150,"mtime":1638214518463,"results":"49","hashOfConfig":"27"},{"size":425,"mtime":1638903075224,"results":"50","hashOfConfig":"27"},{"size":2009,"mtime":1639131575837,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1cdyxy2",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\index.js",[],["110","111"],"C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\App.js",["112"],"import React from 'react';\r\nimport './App.css';\r\nimport { Container } from '@material-ui/core';\r\nimport { BrowserRouter, Switch, Route,Redirect } from 'react-router-dom';\r\nimport Home from './components/Home/Home';\r\nimport { NavBar } from './components/Navbar/NavBar';\r\nimport useStyles from './styles';\r\nimport Auth from './components/Auth/Auth';\r\nimport PostDetails from './components/PostDetails/PostDetails';\r\n\r\nconst App = () => {\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n  return (\r\n\r\n    <BrowserRouter>\r\n      <Container maxWidth=\"xl\">\r\n        <NavBar />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={() => <Redirect to=\"/posts\" />} />\r\n          <Route path=\"/posts\" exact component={Home} />\r\n          <Route path=\"/posts/search\" exact component={Home} />\r\n          <Route path=\"/posts/:id\" exact component={PostDetails} />\r\n          <Route path=\"/auth\" exact component={() => (!user ? <Auth /> : <Redirect to=\"/posts\" />)} />\r\n        </Switch>\r\n      </Container>\r\n\r\n    \r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\styles.js",[],"C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\context\\GlobalContext.js",[],"C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\context\\AppReducer.js",["113","114"],"\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n\r\n    case 'START_LOADING':\r\n      return { ...state, isLoading: true };\r\n    case 'END_LOADING':\r\n      return { ...state, isLoading: false };\r\n    case 'FETCH_ALL':\r\n      return {\r\n        ...state,\r\n        posts: action.payload.data,\r\n        currentPage: action.payload.currentPage,\r\n        numberOfPages: action.payload.numberOfPages,\r\n      };\r\n    case 'FETCH_BY_SEARCH':\r\n      return { ...state, posts: action.payload.data };\r\n    case 'FETCH_POST':\r\n      return { ...state, post: action.payload.post };\r\n    case 'COMMENT':\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) => {\r\n          if (post._id == +action.payload._id) {\r\n            return action.payload;\r\n          }\r\n          return post;\r\n        }),\r\n      };\r\n    case 'CREATE_POST':\r\n\r\n      return {\r\n\r\n        ...state,\r\n        posts: [...state.posts, action.payload]\r\n\r\n      }\r\n\r\n    case 'DELETE':\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== action.payload)\r\n\r\n      }\r\n\r\n    case 'UPDATE':\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post))\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n\r\n\r\n}","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Posts\\Form\\Form.js",[],"C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Posts\\Form\\styles.js",[],"C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Posts\\Posts.js",["115"],"import React,{useContext,useEffect} from 'react';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport {Post} from './Post/Post';\r\nimport useStyles from './styles';\r\nimport { GlobalContext } from '../../context/GlobalContext';\r\n\r\nexport const Posts = ({setCurrentId}) => {\r\n    \r\n    const { posts,getPosts,isLoading } = useContext(GlobalContext);\r\n    useEffect(()=>{\r\n      getPosts();\r\n  },[])        \r\n    const classes= useStyles();\r\n    // if (!posts.length && !isLoading) return 'No posts';\r\n    return (\r\n        isLoading ? <CircularProgress /> : (\r\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n              {posts?.posts?.map((post) => (\r\n                <Grid key={post._id}  item xs={12} sm={12} md={6} lg={3}>\r\n                  <Post post={post} setCurrentId={setCurrentId} />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          )\r\n    )\r\n}\r\n","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Posts\\styles.js",[],"C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Posts\\Post\\Post.js",["116"],"import React, { useContext } from 'react'\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, ButtonBase } from '@material-ui/core/';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport moment from 'moment';\r\nimport useStyles from './styles';\r\nimport { GlobalContext } from '../../../context/GlobalContext';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nexport const Post = ({ post, setCurrentId }) => {\r\n\r\n  const classes = useStyles();\r\n  const { deletePost, likePost,getPost } = useContext(GlobalContext);\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n  const history=useHistory();\r\n  const Likes = () => {\r\n    if (post.likes?.length > 0) {\r\n      return post.likes.find((like) => like === (user?.result?.googleId || user?.result?._id))\r\n        ? (\r\n          <><ThumbUpAltIcon fontSize=\"small\" />&nbsp;{post.likes.length > 2 ? `You and ${post.likes.length - 1} others` : `${post.likes.length} like${post.likes.length > 1 ? 's' : ''}`}</>\r\n        ) : (\r\n          <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{post.likes.length} {post.likes.length === 1 ? 'Like' : 'Likes'}</>\r\n        );\r\n    }\r\n\r\n    return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;Like</>;\r\n  };\r\n\r\n  const openPost = (e) => {\r\n    getPost(post._id);\r\n\r\n    history.push(`/posts/${post._id}`);\r\n  };\r\n\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n\r\n      <ButtonBase\r\n        component=\"span\"\r\n        name=\"test\"\r\n        className={classes.cardAction}\r\n        onClick={openPost}\r\n      >\r\n\r\n        <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\r\n        <div className={classes.overlay}>\r\n          <Typography variant=\"h6\">{post.name}</Typography>\r\n          <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n        </div>\r\n        </ButtonBase>\r\n        {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\r\n          <div className={classes.overlay2}>\r\n            <Button onClick={() => setCurrentId(post._id)} style={{ color: 'white' }} size=\"small\">\r\n              <MoreHorizIcon fontSize=\"default\" />\r\n            </Button>\r\n          </div>\r\n        )}\r\n        <div className={classes.details}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n        </div>\r\n        <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\r\n        </CardContent>\r\n      <CardActions className={classes.cardActions}>\r\n        <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={() => likePost(post._id)}>\r\n          <Likes />\r\n        </Button>\r\n        {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\r\n          <Button size=\"small\" color=\"secondary\" onClick={() => deletePost(post._id)}>\r\n            <DeleteIcon fontSize=\"small\" /> Delete\r\n          </Button>\r\n        )}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Posts\\Post\\styles.js",[],"C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Navbar\\NavBar.js",["117","118"],"import React,{useState,useContext,useEffect} from 'react'\r\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\r\nimport memories from '../../images/memories.png';\r\nimport { useHistory,useLocation,Link } from 'react-router-dom';\r\nimport useStyles from './Styles.js';\r\nimport { GlobalContext } from '../../context/GlobalContext';\r\n\r\n\r\nexport const NavBar = () => {\r\n\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const location = useLocation();\r\n  const history= useHistory();\r\n  const {logout}= useContext(GlobalContext);\r\n  const logOut = () => {\r\n   \r\n    logout();\r\n\r\n    history.push('/auth');\r\n \r\n    setUser(null);\r\n  \r\n  };\r\n\r\n useEffect(()=>{\r\n  const token = user?.token;\r\n  setUser(JSON.parse(localStorage.getItem('profile')))\r\n },[location])\r\n\r\n  return (\r\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n      <div className={classes.brandContainer}>\r\n        <Typography component={Link} to=\"/\"  className={classes.heading} variant=\"h2\" align=\"center\">Memories</Typography>\r\n        <img className={classes.image} src={memories} alt=\"icon\" height=\"60\" />\r\n      </div>\r\n      <Toolbar className={classes.toolbar}>\r\n        {user?.result? (\r\n          <div className={classes.profile}>\r\n            <Avatar className={classes.purple} alt={user.result?.name} src={user.result.imageUrl}>{user.result?.name.charAt(0)}</Avatar>\r\n            <Typography className={classes.userName} variant=\"h6\">{user.result?.name}</Typography>\r\n            <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logOut}>Logout</Button>\r\n          </div>\r\n        ) : (\r\n          <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">Sign In</Button>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Home\\Home.js",[],"C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Navbar\\Styles.js",[],"C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Auth\\Auth.js",[],"C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Auth\\Input.js",[],"C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Auth\\Styles.js",[],"C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Auth\\icon.js",[],"C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\context\\Auth.js",[],"C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\PostDetails\\PostDetails.jsx",["119","120","121"],"import React, { useEffect, useContext } from 'react';\r\nimport { Paper, Typography, CircularProgress, Divider } from '@material-ui/core/';\r\nimport moment from 'moment';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport useStyles from './styles';\r\nimport { GlobalContext } from '../../context/GlobalContext';\r\nimport Comment from './Comment';\r\n\r\nconst PostDetails = () => {\r\n\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const { id } = useParams();\r\n    const { getPost, getPostsBySearch,post,isLoading,getPosts,posts } = useContext(GlobalContext);\r\n    useEffect(() => {\r\n        getPost(id);\r\n        getPosts();\r\n    }, [id]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (post) {\r\n            getPostsBySearch({ search: 'none', tags: post?.tags.join(',') });\r\n        }\r\n    }, [post]);\r\n\r\n    if (!post) return null;\r\n\r\n    const openPost = (_id) => history.push(`/posts/${_id}`);\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <Paper elevation={6} className={classes.loadingPaper}>\r\n                <CircularProgress size=\"7em\" />\r\n            </Paper>\r\n        );\r\n    }\r\n\r\n    const recommendedPosts = posts?.posts?.filter(({ _id }) => _id !== post._id);\r\n\r\n    return (\r\n        <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\r\n            <div className={classes.card}>\r\n                <div className={classes.section}>\r\n                    <Typography variant=\"h3\" component=\"h2\">{post.title}</Typography>\r\n                    <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n                    <Typography gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\r\n                    <Typography variant=\"h6\">Created by: {post.name}</Typography>\r\n                    <Typography variant=\"body1\">{moment(post.createdAt).fromNow()}</Typography>\r\n                    <Divider style={{ margin: '20px 0' }} />\r\n                    <Typography variant=\"body1\"><strong>Realtime Chat - coming soon!</strong></Typography>\r\n                    <Divider style={{ margin: '20px 0' }} />\r\n                    <Comment post={post} />\r\n                    <Divider style={{ margin: '20px 0' }} />\r\n                </div>\r\n                <div className={classes.imageSection}>\r\n                    <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\r\n                </div>\r\n            </div>\r\n            {!!recommendedPosts.length && (\r\n                <div className={classes.section}>\r\n                    <Typography gutterBottom variant=\"h5\">You might also like:</Typography>\r\n                    <Divider />\r\n                    <div className={classes.recommendedPosts}>\r\n                        {recommendedPosts.map(({ title, name, message, likes, selectedFile, _id }) => (\r\n                            <div style={{ margin: '20px', cursor: 'pointer' }} onClick={() => openPost(_id)} key={_id}>\r\n                                <Typography gutterBottom variant=\"h6\">{title}</Typography>\r\n                                <Typography gutterBottom variant=\"subtitle2\">{name}</Typography>\r\n                                <Typography gutterBottom variant=\"subtitle2\">{message}</Typography>\r\n                                <Typography gutterBottom variant=\"subtitle1\">Likes: {likes.length}</Typography>\r\n                                <img src={selectedFile} width=\"200px\" />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default PostDetails\r\n","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\PostDetails\\styles.js",[],"C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Pagination.jsx",["122"],"import React, { useEffect,useContext } from 'react';\r\nimport { Pagination, PaginationItem } from '@material-ui/lab';\r\nimport { Link,useLocation } from 'react-router-dom';\r\nimport { GlobalContext } from '../context/GlobalContext';\r\n\r\n\r\n\r\nimport useStyles from './styles';\r\n\r\nconst Paginate = ({ page }) => {\r\n  \r\n\r\n  const classes = useStyles();\r\n  const {getPosts,numberOfPages}= useContext(GlobalContext);\r\n  const location=useLocation();\r\n  useEffect(() => {\r\n    if (page) {\r\n      getPosts(page);\r\n    }\r\n  }, [page,location]);\r\n\r\n  return (\r\n    <Pagination\r\n      classes={{ ul: classes.ul }}\r\n      count={numberOfPages}\r\n      page={Number(page) || 1}\r\n      variant=\"outlined\"\r\n      color=\"primary\"\r\n      renderItem={(item) => (\r\n        <PaginationItem {...item} component={Link} to={`/posts?page=${item.page}`} />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Paginate;","C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\styles.js",[],"C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\Home\\Styles.js",[],"C:\\Users\\91748\\Desktop\\Projects\\mern\\memories_mern\\client\\src\\components\\PostDetails\\Comment.jsx",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":7,"column":8,"nodeType":"129","messageId":"130","endLine":7,"endColumn":17},{"ruleId":"131","severity":1,"message":"132","line":2,"column":1,"nodeType":"133","endLine":56,"endColumn":2},{"ruleId":"134","severity":1,"message":"135","line":24,"column":24,"nodeType":"136","messageId":"137","endLine":24,"endColumn":26},{"ruleId":"138","severity":1,"message":"139","line":12,"column":5,"nodeType":"140","endLine":12,"endColumn":7,"suggestions":"141"},{"ruleId":"127","severity":1,"message":"142","line":7,"column":8,"nodeType":"129","messageId":"130","endLine":7,"endColumn":16},{"ruleId":"127","severity":1,"message":"143","line":27,"column":9,"nodeType":"129","messageId":"130","endLine":27,"endColumn":14},{"ruleId":"138","severity":1,"message":"144","line":29,"column":4,"nodeType":"140","endLine":29,"endColumn":14,"suggestions":"145"},{"ruleId":"138","severity":1,"message":"146","line":18,"column":8,"nodeType":"140","endLine":18,"endColumn":12,"suggestions":"147"},{"ruleId":"138","severity":1,"message":"148","line":25,"column":8,"nodeType":"140","endLine":25,"endColumn":14,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":71,"column":33,"nodeType":"152","endLine":71,"endColumn":73},{"ruleId":"138","severity":1,"message":"139","line":20,"column":6,"nodeType":"140","endLine":20,"endColumn":21,"suggestions":"153"},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'useStyles' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.","ArrayExpression",["156"],"'InfoIcon' is defined but never used.","'token' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user?.token'. Either include it or remove the dependency array.",["157"],"React Hook useEffect has missing dependencies: 'getPost' and 'getPosts'. Either include them or remove the dependency array.",["158"],"React Hook useEffect has a missing dependency: 'getPostsBySearch'. Either include it or remove the dependency array.",["159"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["160"],"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [getPosts]",{"range":"171","text":"172"},"Update the dependencies array to be: [location, user?.token]",{"range":"173","text":"174"},"Update the dependencies array to be: [getPost, getPosts, id]",{"range":"175","text":"176"},"Update the dependencies array to be: [getPostsBySearch, post]",{"range":"177","text":"178"},"Update the dependencies array to be: [page, location, getPosts]",{"range":"179","text":"180"},[409,411],"[getPosts]",[839,849],"[location, user?.token]",[667,671],"[getPost, getPosts, id]",[820,826],"[getPostsBySearch, post]",[514,529],"[page, location, getPosts]"]