{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91748\\\\Desktop\\\\Projects\\\\mern\\\\memories_mern\\\\client\\\\src\\\\context\\\\GlobalContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\";\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  posts: [],\n  error: null\n}; // Create Context\n\nexport const GlobalContext = /*#__PURE__*/createContext(initialState);\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(AppReducer, initialState); // Actions\n\n  async function getPosts() {\n    const {\n      data\n    } = await axios.get('http://localhost:5000/posts');\n    console.log(data);\n\n    try {\n      dispatch({\n        type: 'FETCH_ALL',\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: 'ERROR',\n        payload: error\n      });\n    }\n  }\n\n  async function createPost(post) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = axios.post('http://localhost:5000/posts', post, config);\n      dispatch({\n        type: 'CREATE_POST',\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: 'FAILED',\n        payload: error\n      });\n    }\n  }\n\n  async function updatePost() {\n    try {} catch (error) {}\n  }\n\n  async function deletePost(id) {\n    try {\n      await axios.delete(`http://localhost:5000/posts/${id}`);\n      dispatch({\n        type: 'DELETE',\n        payload: id\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      posts: state.posts,\n      getPosts,\n      createPost,\n      deletePost\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 1\n  }, this);\n};\n\n_s(GlobalProvider, \"UrEkDPQH5U12xnblC9PjDJeyoVE=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["C:/Users/91748/Desktop/Projects/mern/memories_mern/client/src/context/GlobalContext.js"],"names":["React","createContext","useReducer","AppReducer","axios","initialState","posts","error","GlobalContext","GlobalProvider","children","state","dispatch","getPosts","data","get","console","log","type","payload","createPost","post","config","headers","res","updatePost","deletePost","id","delete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA6BC,UAA7B,QAA8C,OAA9C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAC;AAEfC,EAAAA,KAAK,EAAC,EAFS;AAGfC,EAAAA,KAAK,EAAC;AAHS,CAAnB,C,CASA;;AAEA,OAAO,MAAMC,aAAa,gBAAGP,aAAa,CAACI,YAAD,CAAnC;AAEP,OAAO,MAAMI,cAAc,GAAE,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAE5C,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBV,UAAU,CAACC,UAAD,EAAYE,YAAZ,CAAnC,CAF4C,CAK5C;;AAEA,iBAAeQ,QAAf,GAAyB;AAEtB,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACW,GAAN,CAAU,6BAAV,CAAvB;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACC,QAAI;AAEAF,MAAAA,QAAQ,CAAC;AACLM,QAAAA,IAAI,EAAE,WADD;AAELC,QAAAA,OAAO,EAAEL;AAFJ,OAAD,CAAR;AAMH,KARD,CAQE,OAAOP,KAAP,EAAc;AAEZK,MAAAA,QAAQ,CAAC;AACLM,QAAAA,IAAI,EAAE,OADD;AAELC,QAAAA,OAAO,EAAEZ;AAFJ,OAAD,CAAR;AAKH;AAEH;;AAEG,iBAAea,UAAf,CAA0BC,IAA1B,EAAgC;AAE7B,UAAMC,MAAM,GAAG;AAEXC,MAAAA,OAAO,EAAE;AACL,wBAAiB;AADZ;AAFE,KAAf;;AASA,QAAI;AACA,YAAMC,GAAG,GAAGpB,KAAK,CAACiB,IAAN,CAAW,6BAAX,EAAyCA,IAAzC,EAA8CC,MAA9C,CAAZ;AAEAV,MAAAA,QAAQ,CAAC;AAELM,QAAAA,IAAI,EAAE,aAFD;AAGLC,QAAAA,OAAO,EAAEK,GAAG,CAACV,IAAJ,CAASA;AAHb,OAAD,CAAR;AAOH,KAVD,CAUE,OAAOP,KAAP,EAAc;AAEZK,MAAAA,QAAQ,CAAC;AAELM,QAAAA,IAAI,EAAE,QAFD;AAGLC,QAAAA,OAAO,EAAEZ;AAHJ,OAAD,CAAR;AAOH;AAGH;;AAGD,iBAAekB,UAAf,GAA2B;AAExB,QAAI,CAIH,CAJD,CAIE,OAAOlB,KAAP,EAAc,CAEf;AAGH;;AAED,iBAAemB,UAAf,CAA0BC,EAA1B,EAA6B;AAE1B,QAAI;AAGD,YAAMvB,KAAK,CAACwB,MAAN,CAAc,+BAA8BD,EAAG,EAA/C,CAAN;AAECf,MAAAA,QAAQ,CAAC;AAELM,QAAAA,IAAI,EAAE,QAFD;AAGLC,QAAAA,OAAO,EAAEQ;AAHJ,OAAD,CAAR;AAOH,KAZD,CAYE,OAAOpB,KAAP,EAAc;AACZS,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACH;AAEH;;AAGA,sBACN,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC3BD,MAAAA,KAAK,EAACK,KAAK,CAACL,KADe;AAE3BO,MAAAA,QAF2B;AAG3BO,MAAAA,UAH2B;AAI3BM,MAAAA;AAJ2B,KAA/B;AAAA,cAOGhB;AAPH;AAAA;AAAA;AAAA;AAAA,UADM;AAeL,CAnHM;;GAAMD,c;;KAAAA,c","sourcesContent":["import React, {createContext,useReducer} from \"react\";\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios';\r\n\r\nconst initialState={\r\n    \r\n    posts:[],\r\n    error:null\r\n\r\n\r\n}\r\n\r\n\r\n// Create Context\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider= ({children}) => {\r\n\r\n const [state,dispatch] = useReducer(AppReducer,initialState)\r\n\r\n\r\n // Actions\r\n\r\n async function getPosts(){\r\n\r\n    const { data } = await axios.get('http://localhost:5000/posts');\r\n   console.log(data)\r\n    try {\r\n        \r\n        dispatch({\r\n            type: 'FETCH_ALL',\r\n            payload: data\r\n    \r\n          });\r\n\r\n    } catch (error) {\r\n        \r\n        dispatch({\r\n            type: 'ERROR',\r\n            payload: error\r\n          });\r\n\r\n    }\r\n\r\n }\r\n\r\n     async function createPost(post) {\r\n           \r\n        const config = {\r\n          \r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n\r\n        }\r\n        \r\n    \r\n        try {\r\n            const res = axios.post('http://localhost:5000/posts',post,config);\r\n                \r\n            dispatch({\r\n                    \r\n                type: 'CREATE_POST',\r\n                payload: res.data.data\r\n\r\n            })\r\n\r\n        } catch (error) {\r\n         \r\n            dispatch({\r\n               \r\n                type: 'FAILED',\r\n                payload: error\r\n\r\n            });\r\n\r\n        }\r\n\r\n\r\n     }\r\n\r\n\r\n     async function updatePost(){\r\n         \r\n        try {\r\n\r\n\r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n         \r\n\r\n     }\r\n\r\n     async function deletePost(id){\r\n\r\n        try {\r\n\r\n\r\n           await axios.delete(`http://localhost:5000/posts/${id}`);\r\n\r\n            dispatch({\r\n                    \r\n                type: 'DELETE',\r\n                payload: id\r\n\r\n            })\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n     }\r\n\r\n\r\n      return(\r\n<GlobalContext.Provider value={{\r\n    posts:state.posts,\r\n    getPosts,\r\n    createPost,\r\n    deletePost\r\n}\r\n}>\r\n  {children}\r\n</GlobalContext.Provider>\r\n         \r\n\r\n      )\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}